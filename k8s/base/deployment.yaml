apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    app: auth-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/api/v1/metrics"
    spec:
      serviceAccountName: auth-service
      containers:
      - name: auth-service
        image: ghcr.io/kristianrpo/auth-microservice:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: SERVER_PORT
          value: "8080"
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              name: auth-config
              key: app_env
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: auth-config
              key: log_level
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: db_host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: db_port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: db_password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: db_name
        - name: DB_SSL_MODE
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: db_ssl_mode
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: redis_port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: redis_password
        - name: REDIS_DB
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: redis_db
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: jwt_secret
        - name: JWT_ACCESS_TOKEN_DURATION
          valueFrom:
            configMapKeyRef:
              name: auth-config
              key: jwt_access_token_duration
        - name: JWT_REFRESH_TOKEN_DURATION
          valueFrom:
            configMapKeyRef:
              name: auth-config
              key: jwt_refresh_token_duration
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      imagePullSecrets:
      - name: ghcr-secret

